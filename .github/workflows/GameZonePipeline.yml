name: Pipeline

on:
  push:
    branches: [ "mainline" ]
  pull_request:
    branches: [ "mainline" ]
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
       - name: Getting Project
         uses: actions/checkout@v4.0.0
          
       - name: Setup Java JDK
         uses: actions/setup-java@v3.12.0
         with:
          java-version: '17'
          distribution: 'temurin'

       - name: Run Gradle Build
         run: gradle build

       - name: Create Jar
         run: gradle bootJar

       - name: Rename The Jar
         run: cp build/libs/GameZone-0.0.1-SNAPSHOT.jar GameZone-${{ github.sha }}.jar

       - name: Save The jar
         uses: actions/upload-artifact@v3.1.3
         with:
           name: GameZone-${{ github.sha }}
           path: GameZone-${{ github.sha }}.jar

  Alpha:
    needs: Build 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
          
      - name: Login To Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}

      - name: Download The Jar
        uses: actions/download-artifact@v2.1.1
        with:
          name: GameZone-${{ github.sha }}

      - name: Deploying The Application
        run: (java -jar GameZone-${{ github.sha }}.jar) 
             & (sleep 180 ;
                  echo PostMan Tests Started ;
                  postman collection run "28989418-3a3c5990-6a0a-41d6-a601-6cfad04ac644" --integration-id "148257-${{ github.run_id }}" ; 
                  echo Tests Completed ; exit $?)
         
  Packaging:
    needs: Alpha
    runs-on: ubuntu-latest
    steps:
        - name: Download The Jar
          uses: actions/download-artifact@v2.1.1
          with:
           name: GameZone-${{ github.sha }}

        - name: Moving Jar
          run: mkdir build &&
               mkdir build/libs &&
               mv GameZone-${{ github.sha }}.jar build/libs
        
        - name: Setup Docker
          uses: docker/setup-qemu-action@v2.2.0
          
        - name: Create Docker Image
          run: docker build -t gamezone-${{ github.sha }}:gamezone .

        - name: Save Docker Image
          uses: ishworkh/container-image-artifact-upload@v1.0.0
          with:
            image: gamezone-${{ github.sha }}:gamezone

  Beta:
    needs: Packaging
    runs-on: ubuntu-latest
    steps:
        - name: Setup Docker
          uses: docker/setup-qemu-action@v2.2.0
          
        - name: Download Docker Image
          uses: ishworkh/docker-image-artifact-download@v2.1.0
          with:
            image: gamezone-${{ github.sha }}:gamezone

        - name: Deploying The Application
          run: (docker run -p 8080:8080 -t gamezone) 
             & (sleep 300 ;
                  echo PostMan Tests Started ;
                  postman collection run "28989418-3a3c5990-6a0a-41d6-a601-6cfad04ac644" --integration-id "148257-${{ github.run_id }}" ; 
                  postman api lint 440cb951-f437-470a-8085-3e0e90a57263 --integration-id 148257 ;
                  echo Tests Completed ; exit $?)
          
